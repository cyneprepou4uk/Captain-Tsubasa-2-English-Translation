MEMORY {
    MEM_00:         start = $8000, size = $2000, file = "copy_bank_00.bin", fill = yes, fillval = $FF;
    MEM_01:         start = $A000, size = $2000, file = "copy_bank_01.bin", fill = yes, fillval = $FF;
    MEM_02:         start = $A000, size = $2000, file = "copy_bank_02.bin", fill = yes, fillval = $FF;
    MEM_03:         start = $C000, size = $2000, file = "copy_bank_03.bin", fill = yes, fillval = $FF;
    MEM_04:         start = $A000, size = $2000, file = "copy_bank_04.bin", fill = yes, fillval = $FF;
    MEM_05:         start = $A000, size = $2000, file = "copy_bank_05.bin", fill = yes, fillval = $FF;
    MEM_06:         start = $A000, size = $2000, file = "copy_bank_06.bin", fill = yes, fillval = $FF;
    MEM_07:         start = $A000, size = $2000, file = "copy_bank_07.bin", fill = yes, fillval = $FF;
    MEM_08:         start = $A000, size = $2000, file = "copy_bank_08.bin", fill = yes, fillval = $FF;
    MEM_09:         start = $A000, size = $2000, file = "copy_bank_09.bin", fill = yes, fillval = $FF;
    MEM_0A:         start = $A000, size = $2000, file = "copy_bank_0A.bin", fill = yes, fillval = $FF;
    MEM_0B:         start = $8000, size = $2000, file = "copy_bank_0B.bin", fill = yes, fillval = $FF;
    MEM_0C:         start = $8000, size = $2000, file = "copy_bank_0C.bin", fill = yes, fillval = $FF;
    MEM_0D:         start = $A000, size = $2000, file = "copy_bank_0D.bin", fill = yes, fillval = $FF;
    MEM_0E:         start = $A000, size = $2000, file = "copy_bank_0E.bin", fill = yes, fillval = $FF;
    MEM_0F:         start = $A000, size = $2000, file = "copy_bank_0F.bin", fill = yes, fillval = $FF;
    MEM_10:         start = $8000, size = $4000, file = "copy_bank_10.bin", fill = yes, fillval = $FF;
    MEM_12:         start = $A000, size = $2000, file = "copy_bank_12.bin", fill = yes, fillval = $FF;
    MEM_13:         start = $A000, size = $2000, file = "copy_bank_13.bin", fill = yes, fillval = $FF;
    MEM_14:         start = $8000, size = $4000, file = "copy_bank_14.bin", fill = yes, fillval = $FF;
    MEM_16:         start = $8000, size = $4000, file = "copy_bank_16.bin", fill = yes, fillval = $FF;
    MEM_18:         start = $8000, size = $4000, file = "copy_bank_18.bin", fill = yes, fillval = $FF;
    MEM_1A:         start = $8000, size = $4000, file = "copy_bank_1A.bin", fill = yes, fillval = $FF;
    MEM_1C:         start = $8000, size = $4000, file = "copy_bank_1C.bin", fill = yes, fillval = $FF;
    MEM_1E:         start = $C000, size = $2000, file = "copy_bank_1E.bin", fill = yes, fillval = $FF;
    MEM_1F:         start = $A000, size = $2000, file = "copy_bank_1F.bin", fill = yes, fillval = $FF;
    MEM_20:         start = $A000, size = $2000, file = "copy_bank_20.bin", fill = yes, fillval = $FF;
    MEM_21:         start = $A000, size = $2000, file = "copy_bank_21.bin", fill = yes, fillval = $FF;
    MEM_22:         start = $A000, size = $2000, file = "copy_bank_22.bin", fill = yes, fillval = $FF;
    MEM_23:         start = $A000, size = $2000, file = "copy_bank_23.bin", fill = yes, fillval = $FF;
    MEM_24:         start = $A000, size = $2000, file = "copy_bank_24.bin", fill = yes, fillval = $FF;
    MEM_25:         start = $A000, size = $2000, file = "copy_bank_25.bin", fill = yes, fillval = $FF;
    MEM_26:         start = $C000, size = $2000, file = "copy_bank_26.bin", fill = yes, fillval = $FF;
    MEM_27:         start = $C000, size = $2000, file = "copy_bank_27.bin", fill = yes, fillval = $FF;
    MEM_28:         start = $C000, size = $2000, file = "copy_bank_28.bin", fill = yes, fillval = $FF;
    MEM_FE:         start = $6000, size = $2000, file = "copy_bank_FF.bin", fill = yes, fillval = $FF;
    MEM_FF:         start = $E000, size = $2000, file = "copy_bank_FF.bin", fill = yes, fillval = $FF;
}

SEGMENTS {
    BANK_00:        load = MEM_00, align = $2000;
    BANK_01:        load = MEM_01, align = $2000;
    BANK_02:        load = MEM_02, align = $2000;
    BANK_03:        load = MEM_03, align = $2000;
    BANK_04:        load = MEM_04, align = $2000;
    BANK_05:        load = MEM_05, align = $2000;
    BANK_06:        load = MEM_06, align = $2000;
    BANK_07:        load = MEM_07, align = $2000;
    BANK_08:        load = MEM_08, align = $2000;
    BANK_09:        load = MEM_09, align = $2000;
    BANK_0A:        load = MEM_0A, align = $2000;
    BANK_0B:        load = MEM_0B, align = $2000;
    BANK_0C:        load = MEM_0C, align = $2000;
    BANK_0D:        load = MEM_0D, align = $2000;
    BANK_0E:        load = MEM_0E, align = $2000;
    BANK_0F:        load = MEM_0F, align = $2000;
    BANK_10:        load = MEM_10, align = $4000;
    BANK_12:        load = MEM_12, align = $2000;
    BANK_13:        load = MEM_13, align = $2000;
    BANK_14:        load = MEM_14, align = $4000;
    BANK_16:        load = MEM_16, align = $4000;
    BANK_18:        load = MEM_18, align = $4000;
    BANK_1A:        load = MEM_1A, align = $4000;
    BANK_1C:        load = MEM_1C, align = $4000;
    BANK_1E:        load = MEM_1E, align = $2000;
    BANK_1F:        load = MEM_1F, align = $2000;
    BANK_20:        load = MEM_20, align = $2000;
    BANK_21:        load = MEM_21, align = $2000;
    BANK_22:        load = MEM_22, align = $2000;
    BANK_23:        load = MEM_23, align = $2000;
    BANK_24:        load = MEM_24, align = $2000;
    BANK_25:        load = MEM_25, align = $2000;
    BANK_26:        load = MEM_26, align = $2000;
    BANK_27:        load = MEM_27, align = $2000;
    BANK_28:        load = MEM_28, align = $2000;
    BANK_FE:        load = MEM_FE, align = $2000;
    BANK_FF:        load = MEM_FF, align = $2000;
    MMC5_INIT:      load = MEM_FF, start = $FFC0;
    VECTORS:        load = MEM_FF, start = $FFFA;
}